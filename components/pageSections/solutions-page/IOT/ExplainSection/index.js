import React from "react";
import NextLink from "next/link";
import { Link } from "components/ui";
import { routes } from "config";
import { Container } from "components/grid";
import { Button } from "components/ui";
import IOTEveryWhere from "/static/images/iot-everywhere.png";
import BlockingList from "/static/images/blocking-list.png";

const FinancialEmpowerSection = () => {
    return (
        <section className="section section__promo section__promo--solutions pb-0 pt-0 wwwwww">
            <Container>
                <div className="row row--no-col block__elem--lg">
                    <div className="block">
                        <h3 className="block__title text-bold block__elem--xs">
                            IoT everywhere
                        </h3>
                    </div>
                    <div className=" row">
                        <div className="col-md-8 col-xs-12 col-sm-12 text-justify">
                            <p className="block__elem--xs mb-0">
                                Technology is advancing rapidly; nowadays almost
                                every single device we have in our household or
                                place of work is connected to another device.
                                The Internet of Things, or the ability to gather
                                data from devices and exploit it has become the
                                norm.
                            </p>
                            <p className="block__elem--xs mb-0">
                                Because of this, the amount of information
                                flowing from one end of our network to the other
                                requires high-speed channels and performant
                                storage solutions that can both retrieve and
                                store this information in microseconds, while
                                also distributing it to other places.
                            </p>
                            <p>
                                Edge devices are those that constantly send
                                information (such as a smartphone, a security
                                camera, or a temperature sensor) to a hub, where
                                it is either re-distributed to other devices or
                                centralized and used.
                            </p>
                        </div>
                        <div className="col-md-4 col-xs-12 col-sm-12 d-flex align-center-xs">
                            <img src={IOTEveryWhere} />
                        </div>
                    </div>
                </div>
                <div className="row row--no-col block__elem--lg">
                    <div className="block">
                        <h3 className="block__description block__elem--xs text-weight-500">
                            On-prem IoT
                        </h3>
                    </div>
                    <div className="blog row reverse">
                        <div className="col-md-12 col-xs-12 col-sm-12 text-justify">
                            <p className="block__elem--xs mb-0">
                                With On-prem IoT your devices and hub are all
                                within your private network, having the extra
                                benefit of using the information without it
                                never leaving your control.
                            </p>
                            <p className="block__elem--xs mb-0">
                                As long as you keep your network security a top
                                priority, the safety of your data is ensured.
                                This is a perfect setup for companies that can’t
                                rely on the cloud’s potential vulnerability to
                                external attackers. Industries such as the
                                military, fintech, or healthcare need to
                                protect personal information generated by edge
                                devices. On-prem IoT can provide
                                the same level of real-time utility with the
                                extra layer of security and protection of your
                                data.
                            </p>
                        </div>
                    </div>
                </div>
                <div className="row row--no-col block__elem--lg">
                    <div className="block">
                        <h3 className="block__description block__elem--xs text-weight-500">
                            Real-time data flowing via Memurai
                        </h3>
                    </div>
                    <div className="blog row">
                        <div className="col-md-12 col-xs-12 col-sm-12 text-justify">
                            <p className="block__elem--xs mb-0">
                                In the on-prem context, when data needs to be
                                redistributed rapidly to other devices, Memurai
                                provides a fast and reliable way of achieving
                                this.
                            </p>
                            <p className="block__elem--xs mb-0">
                                Its in-memory architecture allows for
                                microsecond-level reads and writes. At the same
                                time, its message distribution capabilities
                                allow for edge devices to connect to each other
                                and to a central hub with minimum effort.
                            </p>
                            <p className="block__elem--xs mb-0">
                                Compared to other solutions such as Kafka, where
                                the setup is incredibly cumbersome and requires
                                a lot of moving parts, the following options
                                come out-of-the-box with Memurai and ready to be
                                used after the initial installation. <br />
                                More in this topic in this blog article.
                            </p>
                        </div>
                    </div>
                </div>
                <div className="row row--no-col block__elem--lg">
                    <div className="block">
                        <h3 className="block__description block__elem--xs text-weight-500">
                            Pub/Sub
                        </h3>
                    </div>
                    <div className="blog row">
                        <div className="col-md-12 col-sm-12 col-xs-12 text-justify">
                            <p className="block__elem--xs mb-0">
                                Through the Pub/Sub feature, messages are sent
                                efficiently to any device waiting for them. This
                                feature uses a fire-and-forget mechanism,
                                ensuring that the message is sent, but not that
                                every intended listener received it. This is
                                best used when redundant messaging is an option,
                                since it makes the process of sending and
                                receiving information seamless and efficient.
                            </p>
                        </div>
                    </div>
                </div>
                <div className="row row--no-col block__elem--lg">
                    <div className="block">
                        <h3 className="block__description block__elem--xs text-weight-500">
                            Blocking lists
                        </h3>
                    </div>
                    <div className="blog">
                        <div className="row">
                            <div className="col-md-6 col-xs-12 col-sm-12 d-flex align-center-xs">
                                <img src={BlockingList} />
                            </div>
                            <div className="col-md-6 col-sm-12 col-xs-12 text-justify">
                                <p className="block__elem--xs mb-0">
                                    Memurai’s internal data structure: lists,
                                    allow you to create a communication path
                                    between producer and receivers (i.e edge
                                    devices and hub) that is reliable (no
                                    message is lost) and ensures every intended
                                    target receives the message. This solution
                                    requires extra work from the developers
                                    implementing the blocking logic, however,
                                    the end result is far more reliable and
                                    still performant.
                                </p>
                                <p className="block__elem--xs mb-0">
                                    This is the solution you want if you need
                                    multiple producers generating data but only
                                    one target receiving it at any given time.
                                    The blocking mechanics allow for a listener
                                    to receive the message, block the list,
                                    remove the message from it, and then unblock
                                    it for others to use. Unlike pub/sub where
                                    every target gets the same message, with
                                    blocking lists you avoid duplication.
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
                <div className="row row--no-col block__elem--lg">
                    <div className="block">
                        <h3 className="block__description block__elem--xs text-weight-500">
                            Streams
                        </h3>
                    </div>
                    <div className="blog">
                        <div className="row">
                            <div className="col-md-12 col-xs-12 col-sm-12 text-justify">
                                <p className="block__elem--xs mb-0">
                                    While very similar to Pub/Sub and blocking
                                    lists, Memurai Streams implement a
                                    distribution channel that allows for complex
                                    structures to be sent over the wire. From a
                                    development perspective: you’re not
                                    serializing your structures, you’re using
                                    native Memurai types. Another big
                                    difference, and one of the main benefits of
                                    streams, is its time series support.
                                    <br /> Because every message is time-stamped
                                    and stored inside the stream, consumers can
                                    query the stream using a particular time
                                    range. This is perfect for on-prem scenarios
                                    where sensors sending constant data need
                                    the data to be reliably read by the other
                                    side. A stream of telemetry from these
                                    sensors could accommodate for any failure on
                                    the consumer part, allowing it to resume
                                    exactly where it left off last time.
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
                <div className="row row--no-col block__elem--lg">
                    <div className="block">
                        <h3 className="block__description block__elem--xs text-weight-500">
                            Microsecond writes and reads
                        </h3>
                    </div>
                    <div className="blog">
                        <div className="row">
                            <div className="col-md-12 col-xs-12 col-sm-12 text-justify">
                                <p className="block__elem--xs mb-0">
                                    Given the in-memory nature of Memurai,
                                    writing and reading data is more performant
                                    than working with traditional storage-based
                                    databases (including NoSQL alternatives such
                                    as MongoDB). This is because memory access
                                    can be done in 0.1 microseconds and disk
                                    access requires, at least 10 milliseconds.
                                    The latency added by the medium itself is
                                    enough to thwart any attempt at beating
                                    Memurai’s speed.
                                    <br /> In turn, this ensures that real-time
                                    data can be transmitted and distributed
                                    between edge devices in microseconds ranges
                                    (given the right conditions).
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
                <div className="row row--no-col block__elem--lg">
                    <div className="block">
                        <h3 className="block__description block__elem--xs text-weight-500">
                            Available on Windows
                        </h3>
                    </div>
                    <div className="blog">
                        <div className="row">
                            <div className="col-md-12 col-xs-12 col-sm-12 text-justify">
                                <p className="block__elem--xs mb-0">
                                    Either for your development or production
                                    environments, Memurai can integrate and
                                    function with Windows systems, tools and
                                    workflows. Companies and teams with existing
                                    investments in the Windows infrastructure
                                    will be able to take full advantage of an
                                    in-memory database that is fully compatible
                                    with Redis.
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </Container>
        </section>
    );
};

export default FinancialEmpowerSection;
